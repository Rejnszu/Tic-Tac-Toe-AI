{"version":3,"sources":["store/tic-context.js","store/TicProvider.js","components/Board.js","components/Square.js","App.js","index.js","components/Square.module.css","components/Board.module.css"],"names":["TicContext","React","createContext","scoreBoard","scoreBoardHandler","playerStatus","playerStatusHandlerX","playerStatusHandlerO","TicProvider","props","useState","setScoreBoard","setPlayerStatus","ticContext","Provider","value","children","Board","className","styles","board","computerTurn","Square","context","useContext","useEffect","gameIsFinished","disabled","onClick","undefined","isClicked","count","setTimeout","randomNumber","Math","round","random","length","checkWinner","AutoPlay","console","log","square","x","y","hint","gameStatus","winningCondition","App","i","every","score","Fragment","map","button","type","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"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","file":"static/js/main.25896052.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TicContext = React.createContext({\r\n  scoreBoard: [],\r\n  scoreBoardHandler: () => {},\r\n  playerStatus: \"\",\r\n  playerStatusHandlerX: () => {},\r\n  playerStatusHandlerO: () => {},\r\n});\r\n\r\nexport default TicContext;\r\n","import { useState } from \"react\";\r\nimport TicContext from \"./tic-context\";\r\n\r\nconst TicProvider = (props) => {\r\n  const [scoreBoard, setScoreBoard] = useState([\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n    [\"\", false],\r\n  ]);\r\n  const [playerStatus, setPlayerStatus] = useState(\"X\");\r\n  function scoreBoardHandler(scoreBoard) {\r\n    setScoreBoard(scoreBoard);\r\n  }\r\n  function playerStatusHandlerX() {\r\n    setPlayerStatus(\"X\");\r\n  }\r\n  function playerStatusHandlerO() {\r\n    setPlayerStatus(\"O\");\r\n  }\r\n  const ticContext = {\r\n    scoreBoard: scoreBoard,\r\n    scoreBoardHandler: scoreBoardHandler,\r\n    playerStatus: playerStatus,\r\n    playerStatusHandlerX: playerStatusHandlerX,\r\n    playerStatusHandlerO: playerStatusHandlerO,\r\n  };\r\n  return (\r\n    <TicContext.Provider value={ticContext}>\r\n      {props.children}\r\n    </TicContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TicProvider;\r\n","import React from \"react\";\r\nimport styles from \"./Board.module.css\";\r\nexport default function Board(props) {\r\n  return <div className={styles.board}>{props.children} </div>;\r\n}\r\n","import { useEffect, useContext } from \"react\";\r\nimport React from \"react\";\r\nimport styles from \"./Square.module.css\";\r\nimport TicContext from \"../store/tic-context\";\r\nlet computerTurn = false;\r\nlet scoreBoard = [\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n  [\"\", false],\r\n];\r\n\r\nexport default function Square(props) {\r\n  const context = useContext(TicContext);\r\n\r\n  function squareActionsHandler() {\r\n    computerTurn = true;\r\n    if (!props.isClicked) {\r\n      scoreBoard[props.count][1] = true;\r\n      scoreBoard[props.count][0] = props.playerStatus;\r\n      context.scoreBoardHandler(scoreBoard);\r\n\r\n      if (props.playerStatus === \"X\" && !props.gameIsFinished) {\r\n        setTimeout(() => {\r\n          AutoPlay();\r\n        }, 1);\r\n        console.log(props.playerStatus);\r\n        context.playerStatusHandlerO();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    props.checkWinner();\r\n\r\n    setTimeout(() => context.playerStatusHandlerX(), 800);\r\n  }\r\n\r\n  function AutoPlay() {\r\n    let randomNumber = Math.round(Math.random() * (scoreBoard.length - 1));\r\n    while (scoreBoard[randomNumber][0] !== \"\") {\r\n      randomNumber = Math.round(Math.random() * (scoreBoard.length - 1));\r\n    }\r\n\r\n    scoreBoard[randomNumber][0] = \"O\";\r\n    scoreBoard[randomNumber][1] = true;\r\n\r\n    props.checkWinner();\r\n    computerTurn = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.gameIsFinished) {\r\n      scoreBoard = [\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n        [\"\", false],\r\n      ];\r\n    }\r\n  }, [props.gameIsFinished, props.playerStatus]);\r\n\r\n  return (\r\n    <button\r\n      disabled={props.gameIsFinished}\r\n      onClick={!computerTurn ? squareActionsHandler : undefined}\r\n      className={`${styles.square} ${\r\n        props.value === \"X\" ? styles.x : styles.y\r\n      }`}\r\n    >\r\n      {props.value}\r\n      {!props.isClicked &&\r\n        !props.gameIsFinished &&\r\n        props.playerStatus !== \"O\" && (\r\n          <div className={styles.hint}>{props.playerStatus}</div>\r\n        )}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Board from \"./components/Board\";\r\nimport Square from \"./components/Square\";\r\nimport { useContext } from \"react\";\r\nimport TicContext from \"./store/tic-context\";\r\n\r\nconst winningCondition = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6],\r\n];\r\nlet gameStatus;\r\nlet gameIsFinished = false;\r\n\r\nfunction App() {\r\n  const context = useContext(TicContext);\r\n\r\n  function resetGame() {\r\n    context.scoreBoardHandler([\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n      [\"\", false],\r\n    ]);\r\n    context.playerStatusHandlerX();\r\n    gameIsFinished = false;\r\n  }\r\n\r\n  function checkWinner() {\r\n    for (let i = 0; i < winningCondition.length; i++) {\r\n      if (\r\n        context.scoreBoard[winningCondition[i][0]][0] ===\r\n          context.scoreBoard[winningCondition[i][1]][0] &&\r\n        context.scoreBoard[winningCondition[i][1]][0] ===\r\n          context.scoreBoard[winningCondition[i][2]][0] &&\r\n        context.scoreBoard[winningCondition[i][0]][0] !== \"\"\r\n      ) {\r\n        gameStatus =\r\n          \"Player \" + context.scoreBoard[winningCondition[i][0]][0] + \" won\";\r\n        gameIsFinished = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (context.scoreBoard.every((score) => score[0] !== \"\") && !gameIsFinished) {\r\n    gameStatus = \"Tie\";\r\n    gameIsFinished = true;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"centered\">\r\n        {gameIsFinished ? (\r\n          gameIsFinished && <p className=\"game-status\">{gameStatus}</p>\r\n        ) : (\r\n          <p className=\"player-status\">Current player:{context.playerStatus}</p>\r\n        )}\r\n      </div>\r\n      <Board>\r\n        {context.scoreBoard.map((button, i) => {\r\n          return (\r\n            <Square\r\n              isClicked={button[1]}\r\n              count={i}\r\n              value={button[0]}\r\n              key={i}\r\n              playerStatus={context.playerStatus}\r\n              gameIsFinished={gameIsFinished}\r\n              checkWinner={checkWinner}\r\n            />\r\n          );\r\n        })}\r\n      </Board>\r\n\r\n      {gameIsFinished && (\r\n        <div className=\"blurred-background\">\r\n          <button onClick={resetGame} type=\"button\" className=\"try-again\">\r\n            Play again\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport TicProvider from \"./store/TicProvider\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <TicProvider>\r\n    <App />\r\n  </TicProvider>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__2jCiX\",\"x\":\"Square_x__2YvPK\",\"y\":\"Square_y__2BRGu\",\"hint\":\"Square_hint__2mOwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3GLJt\"};"],"sourceRoot":""}